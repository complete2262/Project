<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 데이터베이스 연결 -->
	<!-- <beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
		<beans:property name="username" value="system" />
		<beans:property name="password" value="oracle" />
	</beans:bean>
	SqlSessionFactory
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		1) DB 연결
		<beans:property name="dataSource" ref="dataSource" />
		2) MyBatis 설정 파일의 위치를 지정 : 스프링 동작시 같이 동작 하도록
		=> SQL 파일의 위치를 지정합니다.
		<beans:property name="configLocation"
			value="classpath:/mybatis-config.xml" />
		3) mappers 폴더내의 모든 폴더의 *Mapper.xml 을 인식하도록 해줌
		<beans:property name="mapperLocations"
			value="classpath:/mappers/**/*Mapper.xml" />
	</beans:bean>
	SqlSessionTemplate DB연결 & Close
	sqlSessionFactory 를 생성자로 주입해서 설정-->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</beans:bean> 
	<!-- Mybatis Transaction 설정 -->
	<beans:bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<tx:annotation-driven
		transaction-manager="txManager" />

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:component-scan
		base-package="com.spring.project" />
	<mvc:annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**"
		location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:config/page-config</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="ignoreUnresolvablePlaceholders"
			value="true"></beans:property>
	</beans:bean>
	

	<!-- ImageUpLoad 를 위한 MultipartResolver 설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1000000" />
	</beans:bean>



</beans:beans>
